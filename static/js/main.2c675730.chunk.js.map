{"version":3,"sources":["menu.js","icon.js","header.js","home-page.js","not-found-page.js","player-page.js","faction.js","faction-manifesto-page.js","faction-jobs-page.js","credits-page.js","random-page.js","rules-page.js","story-page.js","saucey-page.js","faction-overview-page.js","service-page.js","app.js","index.js"],"names":["MenuLink","to","children","pathname","useLocation","isActive","className","StoryLinks","useState","vampires","navigator","userAgent","includes","seekers","open","setOpen","onClick","story","vampireHunters","map","title","FactionLinks","name","calculateMenuHeight","window","innerHeight","document","getElementsByClassName","getBoundingClientRect","height","Menu","menuHeight","setMenuHeight","useEffect","onresize","style","Object","entries","factions","sort","left","right","services","players","faction","status","Icon","viewBox","fill","xmlns","cx","cy","r","d","stroke","strokeWidth","Header","replace","metadata","notFound","description","image","body","content","property","Home","NotFound","Player","useParams","rank","renown","race","class","playerClass","famous","factionTitle","src","alt","level","item","Faction","minWidth","FactionJobs","intro","leader","beliefs","offences","skill","belief","offense","Job","rewards","reward","jobs","contact","location","listStyleType","Credits","href","chance","Chance","reducer","state","type","payload","value","filter","concat","Generator","dispatch","pickone","random","generate","overflow","maxHeight","Random","useReducer","rich","common","uncommon","fetchChildren","setContent","a","fetch","headers","accept","res","text","Rules","plugins","gfm","LinkMarkdown","path","setChildren","Story","group","page","components","link","Saucey","FactionOverview","priceToCopper","price","split","chunk","parseInt","reduce","prev","curr","leftPrice","rightPrice","items","search","toLowerCase","itemsReducer","kind","Items","placeholder","onChange","target","Service","service","length","App","StrictMode","exact","element","rootElement","getElementById","hasChildNodes","hydrate","render"],"mappings":"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","file":"static/js/main.2c675730.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useLocation } from 'react-router-dom'\n\nimport factions from './factions.json'\nimport story from './story.json'\nimport players from './players.json'\nimport services from './services.json'\n\nconst MenuLink = ({ to, children }) => {\n    const { pathname } = useLocation()\n    const isActive = `is-${pathname === to ? 'active' : 'inactive'}`\n    return <Link to={to} className={isActive}>{children}</Link>\n}\n\nconst StoryLinks = () => {\n    const { pathname } = useLocation()\n    const [open, setOpen] = useState({\n        vampires: navigator.userAgent === \"ReactSnap\" || pathname.includes('story/vampire-hunters'),\n        seekers: navigator.userAgent === \"ReactSnap\" || pathname.includes('story/seekers')\n    })\n    return (\n        <div>\n            <li>\n                <button className='button is-ghost' onClick={() => setOpen({ vampires: !open.vampires })}>The Vampire Hunters</button>\n                {open.vampires && <ul>\n                    {story.vampireHunters.map(({ to, title }) => <li key={to}><MenuLink to={`/story/${to}`}>{title}</MenuLink></li>)}\n                </ul>}\n            </li>\n            <li>\n                <button className='button is-ghost' onClick={() => setOpen({ seekers: !open.seekers })}>The Seekers</button>\n                {open.seekers && <ul>\n                    {story.seekers.map(({ to, title }) => <li key={to}><MenuLink to={`/story/${to}`}>{title}</MenuLink></li>)}\n                </ul>}\n            </li>\n        </div>\n    )\n}\n\nconst FactionLinks = ({ name, title }) => {\n    const { pathname } = useLocation()\n    const [open, setOpen] = useState(navigator.userAgent === \"ReactSnap\" || (pathname.includes('faction') && pathname.includes(name)))\n    return (\n        <li>\n            <button className='button is-ghost' onClick={() => setOpen(!open)}>{title}</button>\n            {open && <ul>\n                <li>\n                    <MenuLink to={`/faction/${name}/manifesto`}>Manifesto</MenuLink>\n                </li>\n                <li>\n                    <MenuLink to={`/faction/${name}/jobs`}>Jobs</MenuLink>\n                </li>\n            </ul>}\n        </li>\n    )\n}\n\nconst calculateMenuHeight = () => window.innerHeight - document.getElementsByClassName('hero')[0].getBoundingClientRect().height - 30\n\nconst Menu = () => {\n    const [menuHeight, setMenuHeight] = useState(window.innerHeight)\n    useEffect(() => {\n        setMenuHeight(calculateMenuHeight())\n        window.onresize = () => { setMenuHeight(calculateMenuHeight()) }\n        return () => { window.onresize = null }\n    }, [])\n\n    return (\n        <aside className=\"menu mt-3\" style={{height: menuHeight}}>\n            <ul className=\"menu-list\">\n                <li>\n                    <MenuLink to='/'>Home</MenuLink>\n                </li>\n            </ul>\n            <p className=\"menu-label\">\n                Library\n            </p>\n            <ul className=\"menu-list\">\n                <StoryLinks />\n                <li><MenuLink to='/saucey'>The Wizard's Staff</MenuLink></li>\n            </ul>\n            <p className=\"menu-label\">\n                Factions\n            </p>\n            <ul className=\"menu-list\">\n                <li><MenuLink to='/faction/overview'>Overview</MenuLink></li>\n                {Object\n                    .entries(factions)\n                    .sort((left, right) => {\n                        if (left[0] < right[0]) return -2\n                        if (left[0] > right[0]) return 2\n                        return 0\n                    })\n                    .map(([name, { title }]) => <FactionLinks key={name} name={name} title={title} />)}\n            </ul>\n            <p className=\"menu-label\">\n                Services\n            </p>\n            <ul className=\"menu-list\">\n                {Object.entries(services).map(([name, { title }]) => (\n                    <li key={name}><MenuLink to={`/service/${name}`}>{title}</MenuLink></li>\n                ))}\n            </ul>\n            <p className=\"menu-label\">\n                Players\n            </p>\n            <ul className=\"menu-list\">\n                {Object.entries(players)\n                    .sort((left, right) => {\n                        if (left[1].faction < right[1].faction) return -2\n                        if (left[1].faction > right[1].faction) return 2\n                        if (left[1].title < right[1].title) return -1\n                        if (left[1].title > right[1].title) return 1\n                        return 0\n                    })\n                    .map(([name, { title, status }]) => <li key={name}><MenuLink to={`/player/${name}`}><span>{title}</span>{status && <b> - {status}</b>}</MenuLink></li>)}\n            </ul>\n            <p className=\"menu-label\">\n                Game Master\n            </p>\n            <ul className=\"menu-list\">\n                <li><MenuLink to='/rules'>My Rules</MenuLink></li>\n                <li><MenuLink to='/random'>Random</MenuLink></li>\n                <li><MenuLink to='/credits'>Credits</MenuLink></li>\n            </ul>\n        </aside>\n    )\n}\n\nexport default Menu","const Icon = () => (\n    <svg  viewBox=\"0 0 200 200\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"100\" cy=\"100\" r=\"100\" fill=\"white\" />\n        <path d=\"M26.4533 51.2754L97.0179 10.467V51.2754H26.4533Z\" fill=\"#F42C2C\" stroke=\"white\" strokeWidth=\"4\" className='icon-1'/>\n        <path d=\"M22.058 55.2754H95.4855L53.0214 126.049L22.058 55.2754Z\" fill=\"#F42C2C\" stroke=\"white\" strokeWidth=\"4\" className='icon-1' />\n        <path d=\"M21 62.8366L50.1398 129.442L21 143.595V62.8366Z\" fill=\"#A57DE3\" stroke=\"white\" strokeWidth=\"4\" className='icon-2'/>\n        <path d=\"M172.469 51.2754H101.018V10.4464L172.469 51.2754Z\" fill=\"#D2E95B\" stroke=\"white\" strokeWidth=\"4\" className='icon-3'/>\n        <path d=\"M176.907 55.2754L145.04 126.091L102.551 55.2754H176.907Z\" fill=\"#D2E95B\" stroke=\"white\" strokeWidth=\"4\" className='icon-3'/>\n        <path d=\"M56.2748 128.401L99.0178 57.1627L141.761 128.401H56.2748Z\" fill=\"#F42C2C\" stroke=\"white\" strokeWidth=\"4\" className='icon-1' />\n        <path d=\"M56.7238 132.401H141.312L99.0178 189.234L56.7238 132.401Z\" fill=\"#A57DE3\" stroke=\"white\" strokeWidth=\"4\" className='icon-2'/>\n        <path d=\"M175.655 146.95L106.275 186.183L145.92 132.909L175.655 146.95Z\" fill=\"#A57DE3\" stroke=\"white\" strokeWidth=\"4\" className='icon-2' />\n        <path d=\"M52.1267 132.924L91.6884 186.085L23.2796 146.935L52.1267 132.924Z\" fill=\"#A57DE3\" stroke=\"white\" strokeWidth=\"4\" className='icon-2'/>\n        <path d=\"M178 62.5935V143.634L147.923 129.431L178 62.5935Z\" fill=\"#D2E95B\" stroke=\"white\" strokeWidth=\"4\" className='icon-3'/>\n    </svg>\n)\nexport default Icon","import { useEffect } from \"react\"\nimport { useLocation } from \"react-router\"\nimport Icon from './icon'\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport metadata from './metadata.json'\n\nconst Header = () => {\n    let { pathname } = useLocation()\n    pathname = pathname.replace(/\\/$/g, '')\n    if (pathname === '') pathname = '/'\n\n    const {title, className, description, image} = metadata[pathname] || metadata.notFound\n\n    useEffect(() => {\n        document.body.className = `is-${className}`\n        return () => {\n            document.body.className = `is-home`\n        }\n    })\n\n    return (\n        <>\n        <HelmetProvider>\n        <Helmet>\n            <title>{title}</title>\n            <meta name=\"description\" content={description} />\n            <meta property=\"og:title\" content={title} />\n            <meta property=\"og:description\" content={description} />\n            <meta property=\"og:image\" content={`http://dream-dice.blankstring.com${image}`} />\n            <meta property=\"og:url\" content={`http://dream-dice.blankstring.com${pathname}`} />\n        </Helmet>\n        </HelmetProvider>\n        <section className=\"hero\">\n            <div className=\"hero-body\">\n                <div className='level'>\n                    <div className='level-left'>\n                        <div className='level-item'>\n                            <div className='image is-128x128'>\n                                <Icon />\n                            </div>\n                        </div>\n                        <div className='level-item'>\n                            <h1 className=\"title is-size-1\">{title}</h1>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n        </>\n    )\n}\n\nexport default Header","const Home = () => (\n    <div className='content mt-3'>\n        <h1 className='title'>Dream Dice</h1>\n        <p>\n            Hello, if you  have come here it is probably because you are either a player, refered to by a player or perhaps the DM (me). In any case I hope you find what you are looking for.\n        </p>\n        <p>\n            Instead of keeping everything hidden in my docs from my players I thought it would be more fun that they can see everything I have been keeping a note of. I wanted to keep it like a story or game content and make it more interesting.\n        </p>\n        <h2 className='subtitle'>Library</h2>\n        <p>\n            In here you will find a library of a write-up of the campaign I have been running. It started out as a recap then turned into a short novel recounting the interesting events that occured from the view of someone in their world.\n        </p>\n        <p>\n            I will also aime to provide links to books and source materials from the campaign so that any player who would like to be a DM, or is interested in the work behind the campaign can do.\n        </p>\n        <h2 className='subtitle'>Factions</h2>\n        <p>\n            I have always liked the idea of factions and here is the list of factions. The manifesto includes details to help you role play as members of those factions. There is also a list of jobs which I intend to keep up-to-date as I have been doing with the story, this way players can reference jobs they have completed or ones they have yet to complete.\n        </p>\n        <h2 className='subtitle'>Players</h2>\n        <p>\n            I have also put in a summary of each player, again keeping this up to date where possible. I wanted to keep a list of notable things from each player which I hope will aide everyone in role playing with one another as well as notes for me to refer to. I will encourage the players to look at these and help me keep them accurate and up-to-date.\n        </p>\n        <h2 className='subtitle'>Game Master</h2>\n        <p>\n            A place for tools I have created for myself, or things like bookmarks to use later. I have also put a credits section in order to thank anyone who I have taken content from.\n        </p>\n    </div>\n)\n\nexport default Home","const NotFound = () => (\n    <div className='content mt-3 is-size-4'>This page does not exist</div>\n)\n\nexport default NotFound","import { useParams } from \"react-router\"\nimport players from './players.json'\nimport factions from './factions.json'\n\nconst Player = () => {\n    const { name } = useParams()\n    const {\n        title,\n        faction,\n        rank,\n        renown,\n        race,\n        class: playerClass = [],\n        description,\n        famous = []\n    } = players[name] || {}\n\n    const { title: factionTitle } = factions[faction]\n    if (!(name in players)) return <div>This player does not exist</div>\n\n    return (\n        <div className='card p-5 mt-3'>\n            <div className='level'>\n                <div className='level-left'>\n                    <div className='level-item'>\n                        <div className=\"image is-128x128\">\n                            <img src={`/players/${name}.png`} alt={`${title} Avatar`} />\n                        </div>\n                    </div>\n                    <div className='level-item'>\n                        <div className=\"content\">\n                            <h1 className='title is-size-2 mb-5'>{title}</h1>\n                            <h2 className='subtitle'>\n                                <div className='is-size-4 mb-2'>\n                                    <span className='pr-2'>{race}</span>\n                                    {playerClass.map(({title, level}) => (<span key={title} className='has-text-weight-light mr-1'>{title} ({level})</span>))}\n                                </div>\n                                <div className='is-size-6'>\n                                    <span className='pr-2'>{factionTitle}</span>\n                                    <span className='has-text-weight-light'>{rank} ({renown})</span>\n                                </div>\n                            </h2>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className='content'>\n                <p>{description}</p>\n                <h2 className='subtitle'>\n                    Famously\n                </h2>\n                <ul>\n                    {famous.map(item => <li key={item}>{item}</li>)}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default Player\n","import { useParams } from 'react-router-dom'\nimport factions from './factions.json'\n\nconst Faction = ({children}) => {\n    const { name } = useParams()\n    if (!(name in factions)) return <div className='p-5 is-size-4 has-text-danger'>This faction does not exist!</div>\n    const { title } = factions[name]\n    return (\n        <div>\n            <div className='is-flex'>\n                    <div className='mr-3 is-hidden-mobile' style={{minWidth: 100}}>\n                        <img src={`/flags/${name}-flag.png`} alt={`${title} Flag`} />\n                    </div>\n                    <div>{children}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Faction","import { useParams } from 'react-router-dom'\nimport factions from './factions.json'\nimport Faction from './faction'\n\nconst FactionJobs = () => {\n    const { name } = useParams()\n    const { title, intro, leader, beliefs = [], offences = [], skill = {} } = factions[name] || {}\n\n    return (\n        <Faction>\n            <div className='content mt-3'>\n                <h1 className='title'>{title} Manifesto</h1>\n                <div className='card'>\n                    <div className='card-content'>\n                        <p>\n                            {intro}\n                        </p>\n                        <p className='has-text-right'>\n                            <b>{leader}</b>\n                        </p>\n                    </div>\n                </div>\n                <h2 className='subtitle'>Beliefs</h2>\n                <ul>\n                    {beliefs.map(belief => <li key={belief}>{belief}</li>)}\n                </ul>\n                <h2 className='subtitle'>Offences</h2>\n                <ul>\n                    {offences.map(offense => <li key={offense}>{offense}</li>)}\n                </ul>\n                <h2 className='subtitle'>Skill</h2>\n                <h3>{skill.title}</h3>\n                <p>{skill.description}</p>\n            </div>\n        </Faction>\n\n    )\n}\n\nexport default FactionJobs","import { useParams } from 'react-router-dom'\nimport factions from './factions.json'\nimport Faction from './faction'\n\nconst Job = ({ description, status, rewards, title }) => (\n    <div className=\"card mt-5\">\n        <div className=\"card-content\">\n            <div className=\"content\">\n                <h3>{title}</h3>\n                <p>{description}</p>\n                <h2 className='subtitle is-size-5'>Rewards</h2>\n                <ul>\n                    {rewards.map(reward => <li key={reward}>{reward}</li>)}\n                </ul>\n                <p className='has-text-right'>\n                    <b>{status}</b>\n                </p>\n            </div>\n        </div>\n    </div>\n)\n\nconst FactionJobs = () => {\n    const { name } = useParams()\n    const { title, jobs, contact = {} } = factions[name] || {}\n\n    return (\n        <Faction>\n            <div className='mt-3'>\n                <h1 className='title'>{title} Jobs</h1>\n                <div className='card'>\n                    <div className='card-content'>\n                        <div className='level'>\n                            <div className='level-left'>\n                                <div className='level-item'>\n                                    <div className=\"image is-128x128\">\n                                        <img src={`/players/${contact.name}.png`} alt={`${contact.title} Avatar`} />\n                                    </div>\n                                </div>\n                                <div className='level-item'>\n                                    <div className='content'>\n                                        <p className='is-size-6 mb-0'>\n                                            <i>{title} Contact</i>\n                                        </p>\n                                        <h2 className='subtitle is-size-3 mt-0'>{contact.title}</h2>\n                                        <p className='is-size-4'>\n                                            {contact.location}\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='content'>\n                            <p>\n                                {contact.description}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <ul style={{listStyleType: 'none'}}>\n                    {jobs.map(({ description, status, rewards, title }) => (\n                        <li key={description}>\n                            <Job description={description} status={status} rewards={rewards} title={title} />\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Faction>\n    )\n}\n\nexport default FactionJobs","const Credits = () => (\n    <div className='content mt-3'>\n        <h1 className='title'>Credits</h1>\n        <p>A list of things I want to credit and say thanks to!</p>\n        <h2 className='subtitle'>For the Images</h2>\n        <p>\n            I would like to say thank you to everyone on the internet who has provided images. Some of the images my players have given me and all I have done is turn them into avatars. I did find some banners but it was on pintrest and I have no idea who the original author was. If anyone in the world sees this and thinks \"Hey that's my image\", give me a shout and I will either say thanks or take it down. It is all fan made and there is no profit to be had on this entire website.\n        </p>\n        <h2 className='subtitle'>This Website</h2>\n        <p>I made this, if you like it you could drop me an email <a href='mailto:lukejpreston@gmail.com'>Luke</a>. I will be honest, I doubt I will respond and I have an aggressive spam filter, but that shouldn't stop you from trying to get in touch.</p>\n        <h2 className='subtitle'>My Players</h2>\n        <p>Thank you so much for allowing me to be your DM. I have enjoyed all the highs and lows and I hope this campaign goes from strength to strength and I look forward to being part of as many campaign as possible with you!</p>\n        <h2 className='subtitle'>D&D Beyond</h2>\n        <p>I have bought all my content through them.</p>\n        <h2 className='subtitle'>Homebrew Thanks</h2>\n        <p>Here are some homebrew things I have taken and used</p>\n        <h2 className='subtitle'>Foundry VTT</h2>\n        <p>I have used Foundry and want to thank them for their hardwork</p>\n    </div>\n)\n\nexport default Credits","import Chance from 'chance'\nimport { useReducer } from 'react'\nimport random from './random.json'\n\nconst chance = Chance()\nconst generate = (name) => chance.pickone(random[name])\n\nconst reducer = (state, { type, payload: { name, value } }) => {\n    if (type === 'toggle') {\n        const { open } = state\n        if (open.includes(name)) return { ...state, open: open.filter(item => item !== name) }\n        else return { ...state, open: open.concat(name) }\n    }\n    if (type === 'generate') return { ...state, [name]: value }\n    return state\n}\n\nconst Generator = ({ dispatch, state, name, title }) => (\n    <div className='columns'>\n        <div className='column is-4'>\n            <button className='button is-fullwidth' onClick={() => {\n                const value = generate(name)\n                dispatch({\n                    type: 'generate',\n                    payload: {\n                        name,\n                        value\n                    }\n                })\n            }}>{title}</button>\n            </div>\n            <div className='column is-4'>\n            {state[name] && <button className='button is-text is-fullwidth'>{state[name]}</button>}\n            </div>\n        <div className='column is-4'>\n            <button className='button is-ghost is-fullwidth' onClick={() => {\n                dispatch({\n                    type: 'toggle',\n                    payload: {\n                        name\n                    }\n                })\n            }}>{state.open.includes(name) ? 'Collapse' : 'Expand'} {title} List</button>\n            {state.open.includes(name) && <ul style={{\n                overflow: 'auto',\n                maxHeight: 100\n            }}>\n                {random[name].map(item => <li key={item}>{item}</li>)}\n            </ul>}\n        </div>\n        \n    </div>\n)\n\nconst Random = () => {\n    const [state, dispatch] = useReducer(reducer, { rich: 0, common: null, uncommon: null, open: [] })\n\n    return (\n        <div className='mt-3'>\n            <div className='content'>\n                <h1 className='title'>Random Item Generator</h1>\n                <p>\n                    As part of the Discord server everyone is rewarded using <a href='https://tatsu.gg/'>Tatsu</a>. Here are the generators which I use to roll for random items.\n                </p>\n            </div>\n            <Generator dispatch={dispatch} state={state} name='common' title='Common'/>\n            <Generator dispatch={dispatch} state={state} name='uncommon' title='Uncommon'/>\n            <Generator dispatch={dispatch} state={state} name='attribute' title='Attribute'/>\n            <Generator dispatch={dispatch} state={state} name='rare' title='Rare'/>\n            <Generator dispatch={dispatch} state={state} name='feat' title='Feat'/>\n            <Generator dispatch={dispatch} state={state} name='very-rare' title='Very Rare'/>\n            <Generator dispatch={dispatch} state={state} name='legendary' title='Legendary'/>\n        </div>\n    )\n}\n\nexport default Random","import { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\n\nconst fetchChildren = async (setContent) => {\n    try {\n        const res = await fetch('/pages/rules.md', {\n            headers: {\n                accept: 'text/plain'\n            }\n        })\n        const children = await res.text()\n        if (children.includes('<!DOCTYPE html>')) setContent('There was an issue getting this service.')\n        else setContent(children)\n    } catch (err) {\n        setContent('There was an issue getting this page')\n    }\n}\n\n\nconst Rules = () => {\n    const [content, setContent] = useState('Loading ...')\n    useEffect(() => {\n        fetchChildren(setContent)\n    }, [])\n\n    return (\n        <div className='mt-3'>\n            <div className='content'>\n            <ReactMarkdown plugins={[gfm]}>{content}</ReactMarkdown>\n            </div>\n        </div>\n    )\n}\n\nexport default Rules","import { useEffect, useState } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\n\nconst LinkMarkdown = ({ href, children }) => {\n    return <Link to={href}>{children}</Link>\n}\n\nconst fetchChildren = async (path, setChildren) => {\n    try {\n        const res = await fetch(path, {\n            headers: {\n                accept: 'text/plain'\n            }\n        })\n        const children = await res.text()\n        if (children.includes('<!DOCTYPE html>')) setChildren('There was an issue getting this page, [Forward](forward)')\n        else setChildren(children)\n    } catch (err) {\n        setChildren('There was an issue getting this page')\n    }\n}\n\nconst Story = () => {\n    const {group, page} = useParams()\n    const path = `/pages/${group}/${page}.md`\n    const [children, setChildren] = useState('Loading')\n\n    useEffect(() => {\n        fetchChildren(path, setChildren)\n    }, [path])\n\n    return (\n        <div className='content mt-3'>\n            <ReactMarkdown\n                plugins={[gfm]}\n                components={{\n                    link: LinkMarkdown\n                }}\n                children={children}\n            />\n        </div>\n    )\n}\n\nexport default Story","const Saucey = () => (\n    <div className='columns mt-3'>\n        <div className='column is-4'>\n            <div className=\"image\">\n                <img src={`/saucey.jpeg`} alt='thing' />\n            </div>\n        </div>\n        <div className='column is-8'>\n            <div className='content'>\n                <h1 className='title'>\n                    The Wizard's Staff: A Spellinding Romance (The Macy Blush Collection)\n                </h1>\n                <p className='mt-5'>\n                    Na’amah is just an average, ordinary half-succubus adopted by a warren of kobolds. But when she takes a trip to a nearby town, she discovers true love in the form of a distinguished wizard adventurer—Alatar. Life becomes complicated for Na’amah as she tries to get some alone time with the renowned hero, her forbidden fruit.\n                </p>\n                <h2 className='subtitle'>\n                    Amazon\n                </h2>\n                <p className='mt-5'>\n                    You can find the link to this wonderful book on <a href='https://www.amazon.co.uk/gp/product/B08VS1DHPM/ref=ppx_yo_dt_b_d_asin_title_o00?ie=UTF8&psc=1'>Amazon</a>. I am using this content and intend to quote short sections from this book for my player's amusement.\n                </p>\n            </div>\n        </div>\n    </div>\n)\n\nexport default Saucey","const FactionOverview = () => (\n    <div className='mt-3'>\n        <div className='content'>\n            <h1 className='title'>Faction Oversight Guild</h1>\n            <p>\n                The Faction Oversight Guild was created to help factions, organizations to just generally be better. Your faction pays us to help legislate law and protect their members and we then ensure the faction from failing.\n            </p>\n            <p>\n                We provide a model for all factions to follow, the renown model. As your reputation increases so will your rank, this way you can track your progress and if you do not receive something you are entitled to you can come to us and we will fight your case for you.\n            </p>\n            <p>\n                Your faction will provide jobs for your to pick up and complete and on successful completion of a job you will be rewarded large amounts renown. Some jobs offer rewards from the patron where as others offer no such reward.\n            </p>\n            <p>\n                The following is your renown or how many jobs you will need to have taken to progress through the ranks, it is up to your faction to decide what each rank’s responsibilities are ant what rewards you receive but the format is the same for each rank.\n            </p>\n            <table className='table is-narrow is-stripped'>\n                <thead>\n                    <tr>\n                        <th>Rank</th>\n                        <th>Benefit</th>\n                        <th>Renown</th>\n                        <th>Jobs</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>\n                            Rank D\n                        </td>\n                        <td>\n                            Nothing\n                        </td>\n                        <td>\n                            1\n                        </td>\n                        <td>\n                            0\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            Rank C\n                        </td>\n                        <td>\n                            Faction skill\n                        </td>\n                        <td>\n                            3\n                        </td>\n                        <td>\n                            1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            Rank B\n                        </td>\n                        <td>\n                            +1 ability point, can't go above 20\n                        </td>\n                        <td>\n                            20\n                        </td>\n                        <td>\n                            2\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            Rank A\n                        </td>\n                        <td>\n                            A unique magic item that reflects the Faction's beliefs\n                        </td>\n                        <td>\n                            50\n                        </td>\n                        <td>\n                            2\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            Rank S\n                        </td>\n                        <td>\n                            A unique feat that reflects the Faction's beliefs\n                        </td>\n                        <td>\n                            100\n                        </td>\n                        <td>\n                            3\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n        </div>\n\n    </div>\n)\n\nexport default FactionOverview","import { useParams } from 'react-router-dom'\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport services from './services.json'\nimport { useEffect, useReducer, useState } from 'react';\n\nconst fetchChildren = async (path, setChildren) => {\n    try {\n        const res = await fetch(path, {\n            headers: {\n                accept: 'text/plain'\n            }\n        })\n        const children = await res.text()\n        if (children.includes('<!DOCTYPE html>')) setChildren('There was an issue getting this service.')\n        else setChildren(children)\n    } catch (err) {\n        setChildren('There was an issue getting this page')\n    }\n}\n\nconst priceToCopper = (price) => {\n    return price\n        .split(' ')\n        .map(chunk => {\n            const value = parseInt(chunk, 10)\n            if (chunk.includes('sp')) return value * 10\n            if (chunk.includes('ep')) return value * 50\n            if (chunk.includes('gp')) return value * 100\n            if (chunk.includes('pp')) return value * 1000\n            return value\n        })\n        .reduce((prev, curr) => prev + curr, 0)\n}\n\nconst sort = (price) => (left, right) => {\n    const leftPrice = priceToCopper(left.price)\n    const rightPrice = priceToCopper(right.price)\n    if (leftPrice < rightPrice) return price === 'asc' ? 1 : -1\n    if (leftPrice > rightPrice) return price === 'asc' ? -1 : 1\n    return 0\n}\n\nconst filter = ({ items, search }) => items.filter(({ title }) => title.toLowerCase().includes(search.toLowerCase()))\n\nconst itemsReducer = (state, { type, payload }) => {\n    if (type === 'sort') {\n        const { kind } = payload\n        return {\n            ...state,\n            [kind]: state[kind] === 'asc' ? 'dsc' : 'asc'\n        }\n    }\n    if (type === 'search') {\n        const { search } = payload\n        return {\n            ...state,\n            search\n        }\n    }\n    return state\n}\n\nconst Items = ({ items }) => {\n    const [{ price, search }, dispatch] = useReducer(itemsReducer, { price: 'asc', search: '', items })\n\n    return (\n        <table className='table is-striped is-narrow is-fullwidth'>\n            <thead>\n                <tr>\n                    <th>\n\n                        <input\n                            type='text'\n                            className='input is-small'\n                            placeholder='Name'\n                            value={search}\n                            onChange={({ target: { value: search } }) => {\n                                dispatch({\n                                    type: 'search',\n                                    payload: {\n                                        search\n                                    }\n                                })\n                            }}\n                        />\n\n                    </th>\n                    <th>\n                        <button\n                            className='button is-small'\n                            onClick={() => {\n                                dispatch({\n                                    type: 'sort',\n                                    payload: {\n                                        kind: 'price'\n                                    }\n                                })\n                            }}\n                        >\n                            <div className={`arrow-${price} mr-1`} />\n                            <span>Price</span>\n                        </button>\n                    </th>\n                </tr>\n            </thead>\n            <tbody>{\n                filter({ items, search })\n                    .sort(sort(price))\n                    .map(({ title, price }) => (\n                        <tr key={title}>\n                            <td>{title}</td>\n                            <td>{price}</td>\n                        </tr>\n                    ))\n            }</tbody>\n        </table>\n    )\n}\n\nconst Service = () => {\n    const { service } = useParams()\n    const path = `/service/${service}.md`\n    const [children, setChildren] = useState('Loading')\n\n    useEffect(() => {\n        if (service in services) {\n            fetchChildren(path, setChildren)\n        }\n    }, [path, service])\n\n\n    if (!(service in services)) return <div>Service not found!</div>\n\n    const { title, items = [] } = services[service]\n\n    return (\n        <div className='mt-3'>\n            <div className='content'>\n                <h1 className='title'>{title}</h1>\n                <ReactMarkdown plugins={[gfm]}>{children}</ReactMarkdown>\n                {\n                    items.length > 0 && <Items items={items} />\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Service","import React from 'react';\nimport {Routes, BrowserRouter as Router, Route} from 'react-router-dom'\n\nimport Menu from './menu'\nimport Header from './header'\nimport HomePage from './home-page'\nimport NotFound from './not-found-page'\nimport PlayerPage from './player-page'\nimport FactionManifestoPage from './faction-manifesto-page'\nimport FactionJobsPage from './faction-jobs-page';\nimport CreditsPage from './credits-page';\nimport RandomPage from './random-page';\nimport RulesPage from './rules-page';\nimport StoryPage from './story-page'\nimport SauceyPage from './saucey-page'\nimport FactionOverviewPage from './faction-overview-page'\nimport ServicePage from './service-page'\n\nconst App = () => (\n<React.StrictMode>\n    <Router>\n      <>\n      <Header />\n      <section className='section pt-0'>\n          <div className='container'>\n            <div className='columns'>\n              <div className='column is-3'>\n              <Menu></Menu>\n              </div>\n            <div className='column is-8 scroll-to'>\n            <Routes>\n              <Route path='/' exact element={<HomePage />}></Route>\n              <Route path='/player/:name' element={<PlayerPage />}></Route>\n              <Route path='/faction/:name/manifesto' element={<FactionManifestoPage />}></Route>\n              <Route path='/faction/:name/jobs' element={<FactionJobsPage />}></Route>\n              <Route path='/faction/overview' element={<FactionOverviewPage />}></Route>\n              <Route path='/credits' element={<CreditsPage />}></Route>\n              <Route path='/random' element={<RandomPage />}></Route>\n              <Route path='/rules' element={<RulesPage />}></Route>\n              <Route path='/story/:group/:page' element={<StoryPage />}></Route>\n              <Route path='/service/:service' element={<ServicePage />}></Route>\n              <Route path='/saucey' element={<SauceyPage />}></Route>\n              <Route element={<NotFound />}></Route>\n            </Routes>\n            </div>\n            </div>\n          </div>\n      </section>\n      </>\n    </Router>\n  </React.StrictMode>\n)\n\nexport default App","import { hydrate, render } from \"react-dom\";\nimport './index.css';\nimport 'bulma/css/bulma.css'\n\nimport App from './app'\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n"],"sourceRoot":""}